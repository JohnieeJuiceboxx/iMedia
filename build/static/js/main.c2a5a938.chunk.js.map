{"version":3,"sources":["history.js","store/user.js","store/darkMode.js","store/ratings.js","store/index.js","components/navbar.js","components/user-home.js","components/auth-form.js","components/starRating.js","components/singlePopularMovie.js","components/searchResults.js","components/popularMovies.js","components/singleMovieDetail.js","components/splash.js","routes.js","app.js","socket.js","index.js"],"names":["history","createBrowserHistory","GET_USER","REMOVE_USER","defaultUser","getUser","user","type","TOGGLE_DARK_MODE","initialState","darkmode","ADD_RATING","GOT_RATING","UPDATE_RATING","addRating","rating","updatedRating","ratingReducer","state","action","newRating","reducer","combineReducers","darkMode","ratings","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","Navbar","className","id","this","props","isLoggedIn","to","onClick","toggleDarkMode","href","handleClick","Component","connect","dispatch","console","log","a","axios","post","push","error","email","align","AuthForm","name","displayName","handleSubmit","onSubmit","htmlFor","response","data","src","alt","mapDispatch","evt","preventDefault","formName","target","value","password","method","res","dispatchOrHistoryErr","auth","Login","Signup","starRating","showRank","showStars","bind","onStarClick","Axios","get","map","mov","movieId","toString","userId","thisOne","setState","nextValue","prevValue","ratingToAdd","updateRating","notify","width","style","display","starCount","addedRating","fetchRating","movie","put","addToast","useToasts","appearance","autoDismiss","autoDismissTimeout","Fragment","popular","poster_path","title","release_date","slice","vote_average","PopularMovies","search","searchMovie","searchMovieHandler","movies","results","clientSearch","currYear","Date","getFullYear","length","placeholder","onChange","SingleMovieDetail","movieDetails","similar","match","params","prevProps","prevState","Number","tagline","runtime","overview","Splash","spiderSelector","Routes","loadInitialData","exact","path","component","UserHome","withRouter","socket","io","window","location","origin","on","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2a5a938.chunk.js","sourcesContent":["import {createMemoryHistory, createBrowserHistory} from 'history'\r\n\r\nconst history =\r\n  process.env.NODE_ENV === 'test'\r\n    ? createMemoryHistory()\r\n    : createBrowserHistory()\r\n\r\nexport default history\r\n","import axios from 'axios'\r\nimport history from '../history'\r\n\r\n/**\r\n * ACTION TYPES\r\n */\r\nconst GET_USER = 'GET_USER'\r\nconst REMOVE_USER = 'REMOVE_USER'\r\n\r\n/**\r\n * INITIAL STATE\r\n */\r\nconst defaultUser = {}\r\n\r\n/**\r\n * ACTION CREATORS\r\n */\r\nconst getUser = user => ({type: GET_USER, user})\r\nconst removeUser = () => ({type: REMOVE_USER})\r\n\r\n/**\r\n * THUNK CREATORS\r\n */\r\nexport const me = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/auth/me')\r\n    dispatch(getUser(res.data || defaultUser))\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n}\r\n\r\nexport const auth = (email, password, method) => async dispatch => {\r\n  let res\r\n  try {\r\n    res = await axios.post(`/auth/${method}`, {email, password})\r\n  } catch (authError) {\r\n    return dispatch(getUser({error: authError}))\r\n  }\r\n\r\n  try {\r\n    dispatch(getUser(res.data))\r\n    history.push('/home')\r\n  } catch (dispatchOrHistoryErr) {\r\n    console.error(dispatchOrHistoryErr)\r\n  }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n  try {\r\n    await axios.post('/auth/logout')\r\n    dispatch(removeUser())\r\n    history.push('/login')\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n}\r\n\r\n/**\r\n * REDUCER\r\n */\r\nexport default function(state = defaultUser, action) {\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      return action.user\r\n    case REMOVE_USER:\r\n      return defaultUser\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","//Action Type\r\nconst TOGGLE_DARK_MODE = 'TOGGLE_DARK_MODE'\r\n\r\n//Action Creator\r\nexport const toggleDarkMode = () => ({type: TOGGLE_DARK_MODE})\r\n\r\n//Initial State\r\nconst initialState = {\r\n  darkmode: false\r\n}\r\n\r\n//Reducer\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_DARK_MODE:\r\n      return {\r\n        ...state,\r\n        darkmode: !state.darkmode\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\n// ACTION TYPES\r\nconst ADD_RATING = 'ADD_RATING'\r\nconst GOT_RATING = 'GOT_RATING'\r\nconst UPDATE_RATING = 'UPDATE_RATING'\r\n\r\n// ACTION CREATORS\r\nconst addRating = rating => {\r\n  return {\r\n    type: ADD_RATING,\r\n    rating\r\n  }\r\n}\r\nconst gotRating = rating => {\r\n  return {\r\n    type: GOT_RATING,\r\n    rating\r\n  }\r\n}\r\nconst updatedRating = rating => {\r\n  return {\r\n    type: UPDATE_RATING,\r\n    rating\r\n  }\r\n}\r\n//Thunks\r\n\r\nexport const addedRating = rating => {\r\n  return async dispatch => {\r\n    try {\r\n      const {data} = await axios.post('/api/ratings', rating)\r\n      dispatch(addRating(data))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\nexport const fetchRating = () => {\r\n  return async dispatch => {\r\n    try {\r\n      const {data} = await axios.get(`/api/ratings/`)\r\n      dispatch(gotRating(data))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\nexport const updateRatingValue = rating => {\r\n  return async dispatch => {\r\n    try {\r\n      await axios.put('/api/ratings', rating)\r\n      dispatch(updatedRating(rating))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n// INITIAL STATE\r\nconst initialState = {\r\n  rating: 0\r\n}\r\n\r\nconst ratingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_RATING:\r\n      return {...state, rating: action.rating}\r\n    case GOT_RATING:\r\n      return {...state, rating: action.rating}\r\n    case UPDATE_RATING:\r\n      // let newRating = [...state.rating].map(movie => {\r\n      //   console.log(movie)\r\n      //   if (movie.movieId === action.movie) {\r\n      //     movie.rating = action.movie.rating\r\n      //   }\r\n\r\n      //   return movie\r\n      // })\r\n      let newRating = action.rating\r\n\r\n      return {...state, rating: newRating}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default ratingReducer\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport {createLogger} from 'redux-logger'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport user from './user'\r\nimport darkMode from './darkMode'\r\nimport ratings from './ratings'\r\n\r\nconst reducer = combineReducers({user, darkMode, ratings})\r\nconst middleware = composeWithDevTools(\r\n  applyMiddleware(thunkMiddleware, createLogger({collapsed: true}))\r\n)\r\nconst store = createStore(reducer, middleware)\r\n\r\nexport default store\r\nexport * from './user'\r\n","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {logout} from '../store'\r\nimport {toggleDarkMode} from '../store/darkMode'\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"div-nav\">\r\n        <nav id=\"navi\">\r\n          {this.props.isLoggedIn ? (\r\n            <div>\r\n              {/* The navbar will show these links after you log in */}\r\n              <Link to=\"/splash\" className=\"nav-left\">\r\n                <div className=\"nav-logo\">MOVIE</div>\r\n                <div className=\"nav-logo\">CENTRAL</div>\r\n              </Link>\r\n\r\n              <div className=\"dark-button-def\">\r\n                <i\r\n                  className=\"material-icons nav-right\"\r\n                  onClick={() => {\r\n                    this.props.toggleDarkMode()\r\n                  }}\r\n                >\r\n                  brightness_4\r\n                </i>\r\n              </div>\r\n\r\n              <a\r\n                href=\"#\"\r\n                className=\"nav-right\"\r\n                onClick={this.props.handleClick}\r\n              >\r\n                Logout\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {/* The navbar will show these links before you log in */}\r\n              <Link to=\"/splash\" className=\"nav-left\">\r\n                <div className=\"nav-logo\">MOVIE</div>\r\n                <div className=\"nav-logo\">CENTRAL</div>\r\n              </Link>\r\n              <div className=\"dark-button-def\">\r\n                <i\r\n                  className=\"material-icons nav-right\"\r\n                  onClick={() => {\r\n                    this.props.toggleDarkMode()\r\n                  }}\r\n                >\r\n                  brightness_4\r\n                </i>\r\n              </div>\r\n\r\n              <Link to=\"/login\" className=\"nav-right\">\r\n                Login\r\n              </Link>\r\n              <Link to=\"/signup\" className=\"nav-right\">\r\n                Sign Up\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * CONTAINER\r\n */\r\nconst mapState = state => {\r\n  return {\r\n    isLoggedIn: !!state.user.id\r\n  }\r\n}\r\n\r\nconst mapDispatch = dispatch => {\r\n  return {\r\n    toggleDarkMode() {\r\n      console.log('darkness!')\r\n      dispatch(toggleDarkMode())\r\n    },\r\n    handleClick() {\r\n      dispatch(logout())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Navbar)\r\n\r\n/**\r\n * PROP TYPES\r\n */\r\nNavbar.propTypes = {\r\n  handleClick: PropTypes.func.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\n/**\r\n * COMPONENT\r\n */\r\nexport const UserHome = props => {\r\n  const {email} = props\r\n\r\n  return (\r\n    <div className=\"logged\">\r\n      <h3 className=\"welcome\">Welcome, {email}</h3>\r\n      <div>\r\n        <h4>make yourself at home</h4>\r\n      </div>\r\n      <div className=\"button_cont\" id=\"logged-button\" align=\"center\">\r\n        <Link to=\"/splash\" className=\"example_a\">\r\n          S T A R T\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * CONTAINER\r\n */\r\nconst mapState = state => {\r\n  return {\r\n    email: state.user.email\r\n  }\r\n}\r\n\r\nexport default connect(mapState)(UserHome)\r\n\r\n/**\r\n * PROP TYPES\r\n */\r\nUserHome.propTypes = {\r\n  email: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {auth} from '../store'\r\n\r\n/**\r\n * COMPONENT\r\n */\r\nconst AuthForm = props => {\r\n  const {name, displayName, handleSubmit, error} = props\r\n\r\n  return (\r\n    <div className=\"auth-wrapper\">\r\n      <div />\r\n      <div className=\"auth-form\">\r\n        <form onSubmit={handleSubmit} name={name}>\r\n          <div>\r\n            <label htmlFor=\"email\">\r\n              <small>Email</small>\r\n            </label>\r\n            <input name=\"email\" type=\"text\" />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">\r\n              <small>Password</small>\r\n            </label>\r\n            <input name=\"password\" type=\"password\" />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" className=\"submit-button\">\r\n              {displayName}\r\n            </button>\r\n          </div>\r\n          {error && error.response && <div> {error.response.data} </div>}\r\n        </form>\r\n        <div>\r\n          <a href=\"/auth/google\">\r\n            <img\r\n              src=\"googleLogin.png\"\r\n              id=\"google-button\"\r\n              alt=\"google login button\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div />\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * CONTAINER\r\n *   Note that we have two different sets of 'mapStateToProps' functions -\r\n *   one for Login, and one for Signup. However, they share the same 'mapDispatchToProps'\r\n *   function, and share the same Component. This is a good example of how we\r\n *   can stay DRY with interfaces that are very similar to each other!\r\n */\r\nconst mapLogin = state => {\r\n  return {\r\n    name: 'login',\r\n    displayName: 'Login',\r\n    error: state.user.error\r\n  }\r\n}\r\n\r\nconst mapSignup = state => {\r\n  return {\r\n    name: 'signup',\r\n    displayName: 'Sign Up',\r\n    error: state.user.error\r\n  }\r\n}\r\n\r\nconst mapDispatch = dispatch => {\r\n  return {\r\n    handleSubmit(evt) {\r\n      evt.preventDefault()\r\n      const formName = evt.target.name\r\n      const email = evt.target.email.value\r\n      const password = evt.target.password.value\r\n      dispatch(auth(email, password, formName))\r\n    }\r\n  }\r\n}\r\n\r\nexport const Login = connect(mapLogin, mapDispatch)(AuthForm)\r\nexport const Signup = connect(mapSignup, mapDispatch)(AuthForm)\r\n\r\n/**\r\n * PROP TYPES\r\n */\r\nAuthForm.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  displayName: PropTypes.string.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  error: PropTypes.object\r\n}\r\n","import React, {Component} from 'react'\r\nimport StarRatingComponent from 'react-star-rating-component'\r\nimport {addedRating, fetchRating, updateRatingValue} from '../store/ratings.js'\r\nimport {connect} from 'react-redux'\r\nimport Axios from 'axios'\r\n\r\nclass starRating extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      showRank: false,\r\n      rating: 0\r\n    }\r\n    this.showStars = this.showStars.bind(this)\r\n    this.onStarClick = this.onStarClick.bind(this)\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.isLoggedIn) {\r\n      let rated = await Axios.get('api/ratings')\r\n      rated.data.map(mov => {\r\n        if (\r\n          this.props.movieId.toString() === mov.movieId.toString() &&\r\n          this.props.user.toString() === mov.userId.toString()\r\n        ) {\r\n          let thisOne = mov\r\n          this.setState({rating: thisOne.rating})\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  showStars() {\r\n    this.setState({\r\n      showRank: !this.state.showRank\r\n    })\r\n  }\r\n\r\n  onStarClick(nextValue, prevValue, name) {\r\n    this.setState({showRank: !this.state.showRank, rating: nextValue})\r\n\r\n    const ratingToAdd = {\r\n      movieId: this.props.movieId,\r\n      rating: nextValue,\r\n      userId: this.props.user\r\n    }\r\n    if (this.state.rating > 0) {\r\n      this.props.updateRating(ratingToAdd)\r\n    } else {\r\n      this.props.addRating(ratingToAdd)\r\n    }\r\n    this.props.notify()\r\n  }\r\n  render() {\r\n    const {rating} = this.state\r\n    // const {addToast} = useToasts()\r\n    // addToast('Rating Saved!', {\r\n    //   appearance: 'success',\r\n    //   autoDismiss: true,\r\n    //   autoDismissTimeout: 2500\r\n    // })\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          {this.state.rating > 0 ? (\r\n            <img\r\n              src=\"http://pngwebicons.com/uploads/star/ico/star_icon5425.ico \"\r\n              className=\"rank-star\"\r\n              width={25}\r\n              onClick={() => this.showStars()}\r\n              style={{display: this.state.showRank ? 'none' : 'inline'}}\r\n            />\r\n          ) : (\r\n            <img\r\n              src=\"https://www.freeiconspng.com/uploads/white-star-icon-2.png\"\r\n              className=\"rank-star\"\r\n              width={25}\r\n              onClick={() => this.showStars()}\r\n              alt=\"Icon Free White Star\"\r\n              style={{display: this.state.showRank ? 'none' : 'block'}}\r\n            />\r\n          )}\r\n          {this.state.rating > 0 ? this.state.rating : null}\r\n        </div>\r\n        <div\r\n          className=\"rank\"\r\n          style={{display: this.state.showRank ? 'block' : 'none'}}\r\n        >\r\n          <StarRatingComponent\r\n            name=\"rate1\"\r\n            starCount={10}\r\n            value={rating}\r\n            onStarClick={this.onStarClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    user: state.user.id,\r\n    isLoggedIn: !!state.user.id\r\n  }\r\n}\r\nconst mapDispatch = dispatch => {\r\n  return {\r\n    addRating: rating => dispatch(addedRating(rating)),\r\n    fetchRating: () => dispatch(fetchRating()),\r\n    updateRating: movie => dispatch(updateRatingValue(movie))\r\n  }\r\n}\r\nexport default connect(mapState, mapDispatch)(starRating)\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport StarRating from './starRating'\r\nimport {useToasts} from 'react-toast-notifications'\r\n\r\nconst SinglePopularMovie = props => {\r\n  const {addToast} = useToasts()\r\n\r\n  const notify = () => {\r\n    if (!props.isLoggedIn) {\r\n      addToast('Login or Sign Up', {\r\n        appearance: 'error',\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 2500\r\n      })\r\n    } else {\r\n      addToast('Rating Saved!', {\r\n        appearance: 'success',\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 2500\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {props.popular.map(movie => (\r\n        <tr key={movie.id.toString()}>\r\n          <td>\r\n            <Link to={`/movie/${movie.id}`}>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w92/${movie.poster_path}`}\r\n                className=\"poster\"\r\n              />\r\n            </Link>\r\n          </td>\r\n          <td>{`${movie.title} (${movie.release_date.slice(0, 4)})`}</td>\r\n          <td>\r\n            <img\r\n              src=\"http://pngwebicons.com/uploads/star/ico/star_icon5425.ico \"\r\n              className=\"rank-star\"\r\n            />\r\n            {movie.vote_average}\r\n          </td>\r\n          <td>\r\n            {!props.isLoggedIn ? (\r\n              <img\r\n                src=\"https://www.freeiconspng.com/uploads/white-star-icon-2.png\"\r\n                alt=\"Icon Free White Star\"\r\n                onClick={notify}\r\n                className=\"errorStar\"\r\n              />\r\n            ) : (\r\n              <StarRating movieId={movie.id} notify={() => notify()} />\r\n            )}\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    isLoggedIn: !!state.user.id\r\n  }\r\n}\r\nexport default connect(mapState, null)(SinglePopularMovie)\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport StarRating from './starRating'\r\nimport {useToasts} from 'react-toast-notifications'\r\n\r\nfunction searchResults(props) {\r\n  const {addToast} = useToasts()\r\n\r\n  const notify = () => {\r\n    if (!props.isLoggedIn) {\r\n      addToast('Login or Sign Up', {\r\n        appearance: 'error',\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 2500\r\n      })\r\n    } else {\r\n      addToast('Rating Saved!', {\r\n        appearance: 'success',\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 2500\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {props.popular.map(movie => (\r\n        <tr key={movie.id.toString()}>\r\n          <td>\r\n            <Link to={`/movie/${movie.id}`}>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w92/${movie.poster_path}`}\r\n                className=\"poster\"\r\n              />\r\n            </Link>\r\n          </td>\r\n          {/* <td>{`${movie.title} (${movie.release_date.slice(0, 4)})`}</td>\r\n          <td> */}\r\n          <td>{`${movie.title} (${\r\n            movie.release_date ? movie.release_date.slice(0, 4) : 'N/A'\r\n          })`}</td>\r\n          <td>\r\n            <img\r\n              src=\"http://pngwebicons.com/uploads/star/ico/star_icon5425.ico \"\r\n              className=\"rank-star\"\r\n            />\r\n            {movie.vote_average}\r\n          </td>\r\n          <td>\r\n            {!props.isLoggedIn ? (\r\n              <img\r\n                src=\"https://www.freeiconspng.com/uploads/white-star-icon-2.png\"\r\n                alt=\"Icon Free White Star\"\r\n                onClick={notify}\r\n                className=\"errorStar\"\r\n              />\r\n            ) : (\r\n              <StarRating movieId={movie.id} notify={() => notify()} />\r\n            )}\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    isLoggedIn: !!state.user.id\r\n  }\r\n}\r\nexport default connect(mapState, null)(searchResults)\r\n","import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport SinglePopularMovie from './singlePopularMovie'\r\nimport SearchResults from './searchResults'\r\n\r\nexport default class PopularMovies extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      popular: [],\r\n      search: []\r\n    }\r\n    this.searchMovie = this.searchMovie.bind(this)\r\n    this.searchMovieHandler = this.searchMovieHandler.bind(this)\r\n  }\r\n  async componentDidMount() {\r\n    const movies = await axios.get(\r\n      'https://api.themoviedb.org/3/movie/popular?api_key=777f8db0c83570a6c44492e499a03fa0&language=en-US&page=1'\r\n    )\r\n\r\n    this.setState({\r\n      popular: [...movies.data.results]\r\n    })\r\n  }\r\n\r\n  async searchMovie(clientSearch) {\r\n    const results = await axios.get(\r\n      'https://api.themoviedb.org/3/search/movie?api_key=777f8db0c83570a6c44492e499a03fa0&language=en-US&page=1&include_adult=false&query=' +\r\n        clientSearch\r\n    )\r\n    this.setState({\r\n      search: [...results.data.results]\r\n    })\r\n  }\r\n  searchMovieHandler(evt) {\r\n    const search = evt.target.value\r\n    this.searchMovie(search)\r\n  }\r\n\r\n  render() {\r\n    const currYear = new Date().getFullYear()\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {/* <div className=\"pop z-depth-3\"> */}\r\n        <div className=\"pop\">\r\n          {this.state.search.length === 0 ? (\r\n            <h1>Popular Movies {currYear}</h1>\r\n          ) : (\r\n            <h1>Search Results</h1>\r\n          )}\r\n\r\n          <h6>As determined by The Movie Database</h6>\r\n        </div>\r\n        <div id=\"search_input\">\r\n          <i className=\"material-icons prefix\" id=\"magnifying\">\r\n            search\r\n          </i>\r\n\r\n          <input\r\n            id=\"icon_prefix\"\r\n            type=\"text\"\r\n            placeholder=\"Search a movie...\"\r\n            onChange={this.searchMovieHandler}\r\n          />\r\n        </div>\r\n\r\n        <table className=\"striped\">\r\n          <thead>\r\n            <tr>\r\n              <th />\r\n              <th>TITLE</th>\r\n              <th>RATING</th>\r\n              <th>Your Rating</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.search.length === 0 ? (\r\n              <SinglePopularMovie popular={this.state.popular} />\r\n            ) : (\r\n              <SearchResults popular={this.state.search} />\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\n\r\nimport {Link, BrowserRouter as Router} from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nexport default class SingleMovieDetail extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      movieDetails: {},\r\n      similar: []\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    const movieId = this.props.match.params.movieId\r\n    const movies = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=777f8db0c83570a6c44492e499a03fa0&language=en-US\r\n    `)\r\n    const similar = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/recommendations?api_key=777f8db0c83570a6c44492e499a03fa0&language=en-US&page=1\r\n    `)\r\n    this.setState({\r\n      movieDetails: {...movies.data},\r\n      similar: [...similar.data.results]\r\n    })\r\n  }\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    const movieId = this.props.match.params.movieId\r\n\r\n    if (prevState.movieDetails.id !== Number(movieId)) {\r\n      const movies = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=777f8db0c83570a6c44492e499a03fa0&language=en-US\r\n      `)\r\n      const similar = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/recommendations?api_key=777f8db0c83570a6c44492e499a03fa0&language=en-US&page=1\r\n      `)\r\n      this.setState({\r\n        movieDetails: {...movies.data},\r\n        similar: [...similar.data.results]\r\n      })\r\n    }\r\n  }\r\n\r\n  async updater(movieId) {\r\n    const movies = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=777f8db0c83570a6c44492e499a03fa0&language=en-US\r\n    `)\r\n    this.setState({\r\n      movieDetails: {...movies.data}\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1 className=\"detail-title\">{`${this.state.movieDetails.title} `}</h1>\r\n        <h6>\r\n          {this.state.movieDetails.tagline\r\n            ? `'${this.state.movieDetails.tagline}'`\r\n            : null}\r\n        </h6>\r\n        <div className=\"single-detail\">\r\n          <div>\r\n            <Link to=\"/popular\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w300/${\r\n                  this.state.movieDetails.poster_path\r\n                }`}\r\n                className=\"poster\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div className=\"right-details z-depth-2\">\r\n            <div>\r\n              <strong>Release Date: </strong>\r\n              {this.state.movieDetails.release_date}\r\n            </div>\r\n            <div>\r\n              <strong>Runtime: </strong>\r\n              {this.state.movieDetails.runtime} min\r\n            </div>\r\n            <div>\r\n              <p>{this.state.movieDetails.overview}</p>\r\n              <div className=\"also-like\">\r\n                <p className=\"padding-left\">You might also like:</p>\r\n\r\n                <div className=\"recommended\">\r\n                  {this.state.similar.slice(0, 7).map(movie => (\r\n                    <div key={movie.id.toString()}>\r\n                      <Link to={`/movie/${movie.id}`}>\r\n                        <img\r\n                          src={`https://image.tmdb.org/t/p/w45/${\r\n                            movie.poster_path\r\n                          }`}\r\n                          className=\"poster\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Splash extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.darkMode.darkmode !== this.props.darkMode.darkmode) {\r\n      this.spiderSelector()\r\n    }\r\n  }\r\n  spiderSelector() {\r\n    if (!this.props.darkMode.darkmode) {\r\n      return <img src=\"/spidey.png\" className=\"spidey\" />\r\n    }\r\n    return <img src=\"/black-suit-spider-man.png\" className=\"spidey2\" />\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"splash\">\r\n        <div className=\"splash-left\">\r\n          <div className=\"anton-text intro-text\">INTRO</div>\r\n          <div className=\"anton-text intro-text\">DUCING</div>\r\n          <div id=\"black-text\" className=\"anton-text\">\r\n            MOVIE\r\n          </div>\r\n          <div id=\"black-text\" className=\"anton-text\">\r\n            CENTRAL\r\n          </div>\r\n          <div className=\"overview\">\r\n            The leading movie website for the lastest films.\r\n          </div>\r\n\r\n          <div className=\"button_cont\" align=\"center\">\r\n            <Link to=\"/popular\" className=\"example_a\">\r\n              E N T E R\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"spidey-div\">\r\n          {/* {!this.props.darkMode.darkmode ? (\r\n            <img src=\"/spidey.png\" className=\"spidey\" />\r\n          ) : (\r\n            <img src=\"/black-suit-spider-man.png\" className=\"spidey\" />\r\n          )} */}\r\n          {this.spiderSelector()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapState = state => {\r\n  return {\r\n    darkMode: state.darkMode\r\n  }\r\n}\r\nexport default connect(mapState)(Splash)\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter, Route, Switch} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {Login, Signup, UserHome} from './components'\r\nimport {me} from './store'\r\nimport PopularMovies from './components/popularMovies'\r\nimport SingleMovieDetail from './components/singleMovieDetail'\r\nimport Splash from './components/splash'\r\n\r\n/**\r\n * COMPONENT\r\n */\r\nclass Routes extends Component {\r\n  componentDidMount() {\r\n    this.props.loadInitialData()\r\n  }\r\n\r\n  render() {\r\n    const {isLoggedIn} = this.props\r\n\r\n    return (\r\n      <Switch>\r\n        {/* Routes placed here are available to all visitors */}\r\n        <Route exact path=\"/movie/:movieId\" component={SingleMovieDetail} />\r\n        <Route path=\"/splash\" component={Splash} />\r\n\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route path=\"/popular\" component={PopularMovies} />\r\n        {isLoggedIn && (\r\n          <Switch>\r\n            {/* Routes placed here are only available after logging in */}\r\n            <Route path=\"/home\" component={UserHome} />\r\n          </Switch>\r\n        )}\r\n        {/* Displays Popular Movies component as a fallback */}\r\n        <Route component={Splash} />\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * CONTAINER\r\n */\r\nconst mapState = state => {\r\n  return {\r\n    // Being 'logged in' for our purposes will be defined has having a state.user that has a truthy id.\r\n    // Otherwise, state.user will be an empty object, and state.user.id will be falsey\r\n    isLoggedIn: !!state.user.id\r\n  }\r\n}\r\n\r\nconst mapDispatch = dispatch => {\r\n  return {\r\n    loadInitialData() {\r\n      dispatch(me())\r\n    }\r\n  }\r\n}\r\n\r\n// The `withRouter` wrapper makes sure that updates are not blocked\r\n// when the url changes\r\nexport default withRouter(connect(mapState, mapDispatch)(Routes))\r\n\r\n/**\r\n * PROP TYPES\r\n */\r\nRoutes.propTypes = {\r\n  loadInitialData: PropTypes.func.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired\r\n}\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Navbar} from './components'\r\nimport Routes from './routes'\r\n\r\nconst App = props => {\r\n  console.log(props.darkMode.darkmode)\r\n  return (\r\n    <div\r\n      id=\"app-main\"\r\n      className={props.darkMode.darkmode ? 'darkmode' : 'lightmode'}\r\n    >\r\n      <Navbar />\r\n      <Routes />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    darkMode: state.darkMode\r\n  }\r\n}\r\n\r\nexport default connect(mapState)(App)\r\n","import io from 'socket.io-client'\r\n\r\nconst socket = io(window.location.origin)\r\n\r\nsocket.on('connect', () => {\r\n  console.log('Connected!')\r\n})\r\n\r\nexport default socket\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\nimport {Router} from 'react-router-dom'\r\nimport {ToastProvider} from 'react-toast-notifications'\r\nimport history from './history'\r\nimport store from './store'\r\nimport App from './app'\r\n\r\n// establishes socket connection\r\nimport './socket'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <ToastProvider>\r\n        <App />\r\n      </ToastProvider>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('app')\r\n)\r\n"],"sourceRoot":""}